{
  "info": {
    "name": "SafeGuard Resident Visitor Management",
    "description": "Complete visitor management system for residents including invitation creation, QR code generation, and visit tracking",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication Setup",
      "item": [
        {
          "name": "1. Resident Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"resident.test@example.com\",\n  \"password\": \"ResidentPass123!\",\n  \"remember_me\": false,\n  \"device_name\": \"Resident Mobile App\",\n  \"location\": \"Apartment B205\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/enhanced/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "enhanced", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    pm.environment.set('residentToken', data.accessToken);",
                  "    pm.environment.set('residentRefreshToken', data.refreshToken);",
                  "    pm.environment.set('residentId', data.user.id);",
                  "    pm.environment.set('residentBuildingId', data.user.building_id);",
                  "    pm.environment.set('residentEmail', data.user.email);",
                  "    pm.environment.set('residentName', data.user.first_name + ' ' + data.user.last_name);",
                  "    pm.environment.set('apartmentNumber', data.user.apartment_number);",
                  "    console.log('Resident login successful');",
                  "    pm.test('Login successful', function () {",
                  "        pm.expect(data.user.role).to.eql('resident');",
                  "        pm.expect(data.user.is_active).to.eql(true);",
                  "    });",
                  "} else {",
                  "    console.log('Resident login failed:', pm.response.json());",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "2. Security Guard Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"security.guard@dantatagroup.com\",\n  \"password\": \"SecurityPass123!\",\n  \"remember_me\": false,\n  \"device_name\": \"Security Terminal\",\n  \"location\": \"Gate A - Main Entrance\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/enhanced/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "enhanced", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    pm.environment.set('securityToken', data.accessToken);",
                  "    pm.environment.set('securityId', data.user.id);",
                  "    console.log('Security guard login successful');",
                  "} else {",
                  "    console.log('Security guard login failed');",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Visitor Invitation Management",
      "item": [
        {
          "name": "1. Create Single Visitor Invitation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{residentToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Business Meeting with John Smith\",\n  \"description\": \"Quarterly review meeting with our financial advisor\",\n  \"expected_start\": \"2024-01-20T14:00:00Z\",\n  \"expected_end\": \"2024-01-20T16:00:00Z\",\n  \"visit_type\": \"single\",\n  \"visitors\": [\n    {\n      \"name\": \"John Smith\",\n      \"phone\": \"+2348123456789\",\n      \"email\": \"john.smith@financialgroup.com\",\n      \"company\": \"Elite Financial Group\",\n      \"identification_type\": \"National ID\",\n      \"identification_number\": \"12345678901\",\n      \"purpose\": \"Financial consultation\"\n    }\n  ],\n  \"notes\": \"Guest will arrive in a blue Toyota Camry, plate number ABC-123-XY\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visitors/invitations",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "invitations"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const data = pm.response.json().data;",
                  "    pm.environment.set('singleVisitId', data.visit.id);",
                  "    pm.environment.set('singleVisitQRCode', data.qr_code);",
                  "    pm.environment.set('singleVisitQRImage', data.qr_image);",
                  "    console.log('Single visitor invitation created successfully');",
                  "    console.log('QR Code:', data.qr_code);",
                  "    console.log('Visit ID:', data.visit.id);",
                  "    ",
                  "    pm.test('Visit created successfully', function () {",
                  "        pm.expect(data.visit.title).to.eql('Business Meeting with John Smith');",
                  "        pm.expect(data.visitor_count).to.eql(1);",
                  "        pm.expect(data.qr_code).to.match(/^SG_[A-Z0-9]{32}$/);",
                  "    });",
                  "} else {",
                  "    console.log('Failed to create invitation:', pm.response.json());",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "2. Create Group Visitor Invitation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{residentToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Family Birthday Party\",\n  \"description\": \"Celebrating my daughter's 10th birthday with family and friends\",\n  \"expected_start\": \"2024-01-21T15:00:00Z\",\n  \"expected_end\": \"2024-01-21T20:00:00Z\",\n  \"visit_type\": \"group\",\n  \"visitors\": [\n    {\n      \"name\": \"Sarah Johnson\",\n      \"phone\": \"+2348123456790\",\n      \"email\": \"sarah.j@email.com\",\n      \"relationship\": \"Sister\",\n      \"purpose\": \"Birthday celebration\"\n    },\n    {\n      \"name\": \"Mike Johnson\",\n      \"phone\": \"+2348123456791\",\n      \"email\": \"mike.j@email.com\",\n      \"relationship\": \"Brother-in-law\",\n      \"purpose\": \"Birthday celebration\"\n    },\n    {\n      \"name\": \"Emma Wilson\",\n      \"phone\": \"+2348123456792\",\n      \"email\": \"emma.w@email.com\",\n      \"relationship\": \"Friend\",\n      \"purpose\": \"Birthday celebration\"\n    },\n    {\n      \"name\": \"David Wilson\",\n      \"phone\": \"+2348123456793\",\n      \"email\": \"david.w@email.com\",\n      \"relationship\": \"Friend\",\n      \"purpose\": \"Birthday celebration\"\n    }\n  ],\n  \"notes\": \"Party supplies will be delivered earlier. Guests may arrive between 3-4 PM.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visitors/invitations",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "invitations"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const data = pm.response.json().data;",
                  "    pm.environment.set('groupVisitId', data.visit.id);",
                  "    pm.environment.set('groupVisitQRCode', data.qr_code);",
                  "    pm.environment.set('groupVisitQRImage', data.qr_image);",
                  "    console.log('Group visitor invitation created successfully');",
                  "    console.log('QR Code:', data.qr_code);",
                  "    console.log('Visitor Count:', data.visitor_count);",
                  "    ",
                  "    pm.test('Group visit created successfully', function () {",
                  "        pm.expect(data.visit.title).to.eql('Family Birthday Party');",
                  "        pm.expect(data.visitor_count).to.eql(4);",
                  "        pm.expect(data.visit.visit_type).to.eql('group');",
                  "    });",
                  "} else {",
                  "    console.log('Failed to create group invitation:', pm.response.json());",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "3. Create Quick Visit (Delivery)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{residentToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Package Delivery - Amazon\",\n  \"description\": \"Expecting a package delivery from Amazon\",\n  \"expected_start\": \"2024-01-19T09:00:00Z\",\n  \"expected_end\": \"2024-01-19T18:00:00Z\",\n  \"visit_type\": \"delivery\",\n  \"visitors\": [\n    {\n      \"name\": \"Amazon Delivery\",\n      \"phone\": \"+2348000000000\",\n      \"company\": \"Amazon Nigeria\",\n      \"purpose\": \"Package delivery\",\n      \"identification_type\": \"Company ID\",\n      \"vehicle_info\": {\n        \"type\": \"delivery_van\",\n        \"company\": \"Amazon\"\n      }\n    }\n  ],\n  \"notes\": \"Package for Alex Johnson, Apartment B205. Call resident if not available.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visitors/invitations",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "invitations"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const data = pm.response.json().data;",
                  "    pm.environment.set('deliveryVisitId', data.visit.id);",
                  "    pm.environment.set('deliveryVisitQRCode', data.qr_code);",
                  "    console.log('Delivery visit created successfully');",
                  "} else {",
                  "    console.log('Failed to create delivery visit:', pm.response.json());",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Visitor Invitation Queries",
      "item": [
        {
          "name": "1. Get My Visitor Invitations",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{residentToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/visitors/invitations?page=1&limit=10&status=confirmed",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "invitations"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "status",
                  "value": "confirmed"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    console.log('Found', data.pagination.total, 'visitor invitations');",
                  "    pm.test('Invitations retrieved successfully', function () {",
                  "        pm.expect(data).to.have.property('data');",
                  "        pm.expect(data).to.have.property('pagination');",
                  "    });",
                  "} else {",
                  "    console.log('Failed to get invitations:', pm.response.json());",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "2. Get Specific Visit Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{residentToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/visitors/invitations/{{singleVisitId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "invitations", "{{singleVisitId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    console.log('Visit Details:', data.visit.title);",
                  "    if (data.qr_code) {",
                  "        console.log('QR Code available:', data.qr_code.code);",
                  "    }",
                  "    pm.test('Visit details retrieved', function () {",
                  "        pm.expect(data).to.have.property('visit');",
                  "    });",
                  "} else {",
                  "    console.log('Failed to get visit details:', pm.response.json());",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "3. Search My Visitors",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{residentToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/visitors/invitations?search=John&start_date=2024-01-01&end_date=2024-12-31",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "invitations"],
              "query": [
                {
                  "key": "search",
                  "value": "John"
                },
                {
                  "key": "start_date",
                  "value": "2024-01-01"
                },
                {
                  "key": "end_date",
                  "value": "2024-12-31"
                }
              ]
            }
          }
        },
        {
          "name": "4. Get Visit Check-in Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{residentToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/visitors/checkin-status/{{singleVisitId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "checkin-status", "{{singleVisitId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    console.log('Check-in status:', JSON.stringify(data, null, 2));",
                  "} else {",
                  "    console.log('Failed to get check-in status');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "5. Get Visit History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{residentToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/visitors/invitations/{{singleVisitId}}/history",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "invitations", "{{singleVisitId}}", "history"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    console.log('Visit history entries:', data.length);",
                  "    data.forEach((entry, index) => {",
                  "        console.log(`${index + 1}. ${entry.action} at ${entry.timestamp}`);",
                  "    });",
                  "} else {",
                  "    console.log('Failed to get visit history');",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Visitor Invitation Updates",
      "item": [
        {
          "name": "1. Update Visit Details",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{residentToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Business Meeting with John Smith\",\n  \"description\": \"Updated: Quarterly review meeting with our financial advisor - now includes investment planning\",\n  \"expected_end\": \"2024-01-20T17:00:00Z\",\n  \"notes\": \"Guest will arrive in a blue Toyota Camry, plate number ABC-123-XY. Extended meeting duration by 1 hour.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visitors/invitations/{{singleVisitId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "invitations", "{{singleVisitId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    console.log('Visit updated successfully');",
                  "    pm.test('Visit updated', function () {",
                  "        pm.expect(data.title).to.include('Updated');",
                  "    });",
                  "} else {",
                  "    console.log('Failed to update visit:', pm.response.json());",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "2. Add Visitors to Group Visit",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{residentToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"visitors\": [\n    {\n      \"name\": \"Sarah Johnson\",\n      \"phone\": \"+2348123456790\",\n      \"email\": \"sarah.j@email.com\",\n      \"relationship\": \"Sister\",\n      \"purpose\": \"Birthday celebration\"\n    },\n    {\n      \"name\": \"Mike Johnson\",\n      \"phone\": \"+2348123456791\",\n      \"email\": \"mike.j@email.com\",\n      \"relationship\": \"Brother-in-law\",\n      \"purpose\": \"Birthday celebration\"\n    },\n    {\n      \"name\": \"Emma Wilson\",\n      \"phone\": \"+2348123456792\",\n      \"email\": \"emma.w@email.com\",\n      \"relationship\": \"Friend\",\n      \"purpose\": \"Birthday celebration\"\n    },\n    {\n      \"name\": \"David Wilson\",\n      \"phone\": \"+2348123456793\",\n      \"email\": \"david.w@email.com\",\n      \"relationship\": \"Friend\",\n      \"purpose\": \"Birthday celebration\"\n    },\n    {\n      \"name\": \"Lisa Thompson\",\n      \"phone\": \"+2348123456794\",\n      \"email\": \"lisa.t@email.com\",\n      \"relationship\": \"Neighbor\",\n      \"purpose\": \"Birthday celebration\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visitors/invitations/{{groupVisitId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "invitations", "{{groupVisitId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    console.log('Group visit updated with additional visitor');",
                  "} else {",
                  "    console.log('Failed to update group visit:', pm.response.json());",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "QR Code Scanning (Security Side)",
      "item": [
        {
          "name": "1. Scan QR Code - Visitor Arrival",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{securityToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"qr_code\": \"{{singleVisitQRCode}}\",\n  \"action\": \"arrival\",\n  \"gate_number\": \"Gate A\",\n  \"security_officer\": \"{{securityId}}\",\n  \"location\": \"Main Entrance\",\n  \"visitor_verification\": {\n    \"id_checked\": true,\n    \"photo_taken\": true,\n    \"name_verified\": true\n  },\n  \"notes\": \"Visitor arrived on time, ID verified successfully\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visitors/scan",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "scan"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    console.log('QR Code scanned successfully - Visitor Arrival');",
                  "    console.log('Visit ID:', data.visit.visit_id);",
                  "    console.log('Action:', data.action);",
                  "    pm.test('Arrival scan successful', function () {",
                  "        pm.expect(data.action).to.eql('arrival');",
                  "    });",
                  "} else {",
                  "    console.log('QR scan failed:', pm.response.json());",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "2. Scan QR Code - Visitor Entry",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{securityToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"qr_code\": \"{{singleVisitQRCode}}\",\n  \"action\": \"entry\",\n  \"gate_number\": \"Gate A\",\n  \"security_officer\": \"{{securityId}}\",\n  \"location\": \"Main Entrance\",\n  \"notes\": \"Visitor granted entry to building\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visitors/scan",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "scan"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    console.log('QR Code scanned successfully - Visitor Entry');",
                  "    pm.test('Entry scan successful', function () {",
                  "        pm.expect(data.action).to.eql('entry');",
                  "    });",
                  "} else {",
                  "    console.log('Entry scan failed:', pm.response.json());",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "3. Scan QR Code - Visitor Exit",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{securityToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"qr_code\": \"{{singleVisitQRCode}}\",\n  \"action\": \"exit\",\n  \"gate_number\": \"Gate A\",\n  \"security_officer\": \"{{securityId}}\",\n  \"location\": \"Main Entrance\",\n  \"notes\": \"Visitor exited building, visit completed successfully\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visitors/scan",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "scan"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    console.log('QR Code scanned successfully - Visitor Exit');",
                  "    pm.test('Exit scan successful', function () {",
                  "        pm.expect(data.action).to.eql('exit');",
                  "    });",
                  "} else {",
                  "    console.log('Exit scan failed:', pm.response.json());",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "4. Scan Group QR Code - Multiple Visitors",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{securityToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"qr_code\": \"{{groupVisitQRCode}}\",\n  \"action\": \"arrival\",\n  \"gate_number\": \"Gate A\",\n  \"security_officer\": \"{{securityId}}\",\n  \"location\": \"Main Entrance\",\n  \"visitor_count\": 4,\n  \"visitor_verification\": {\n    \"group_verification\": true,\n    \"id_checks_completed\": 4,\n    \"photos_taken\": 4\n  },\n  \"notes\": \"Group of 4 visitors arrived for birthday party, all IDs verified\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visitors/scan",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "scan"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    console.log('Group QR Code scanned successfully');",
                  "    console.log('Group size:', data.visit.visitor_count || 'Multiple');",
                  "} else {",
                  "    console.log('Group QR scan failed:', pm.response.json());",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Visitor Management Analytics",
      "item": [
        {
          "name": "1. Get Active Visits (Security View)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{securityToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/visitors/active",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "active"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    console.log('Active visits count:', data.count);",
                  "    console.log('Active visits:', JSON.stringify(data.active_visits, null, 2));",
                  "} else {",
                  "    console.log('Failed to get active visits');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "2. Search All Visitors (Building Level)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{securityToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/visitors/search?query=John&page=1&limit=10&building_only=true",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "search"],
              "query": [
                {
                  "key": "query",
                  "value": "John"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "building_only",
                  "value": "true"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    console.log('Found', data.visitors.length, 'visitors matching \"John\"');",
                  "    data.visitors.forEach(visitor => {",
                  "        console.log(`- ${visitor.name} (${visitor.phone}) - ${visitor.total_visits} visits`);",
                  "    });",
                  "} else {",
                  "    console.log('Search failed');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "3. Get Building Visitor Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{securityToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/visitors/stats?period=monthly&start_date=2024-01-01&end_date=2024-01-31",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "stats"],
              "query": [
                {
                  "key": "period",
                  "value": "monthly"
                },
                {
                  "key": "start_date",
                  "value": "2024-01-01"
                },
                {
                  "key": "end_date",
                  "value": "2024-01-31"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    console.log('Building Visitor Statistics:');",
                  "    console.log('- Total Visits:', data.total_visits || 0);",
                  "    console.log('- Active Visits:', data.active_visits || 0);",
                  "    console.log('- Completed Visits:', data.completed_visits || 0);",
                  "    console.log('- Average Visitors per Visit:', data.avg_visitors_per_visit || 0);",
                  "    console.log('- Period:', data.period);",
                  "} else {",
                  "    console.log('Failed to get statistics');",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Visit Cancellation & Cleanup",
      "item": [
        {
          "name": "1. Cancel Visit",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{residentToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reason\": \"Meeting was rescheduled to next week due to unexpected circumstances\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visitors/invitations/{{deliveryVisitId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "invitations", "{{deliveryVisitId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    console.log('Visit cancelled successfully');",
                  "    console.log('Cancellation reason:', data.reason);",
                  "    pm.test('Visit cancelled', function () {",
                  "        pm.expect(data.status).to.eql('cancelled');",
                  "    });",
                  "} else {",
                  "    console.log('Failed to cancel visit:', pm.response.json());",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "2. Try Invalid QR Code Scan",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{securityToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"qr_code\": \"INVALID_QR_CODE_FORMAT\",\n  \"action\": \"arrival\",\n  \"notes\": \"Testing invalid QR code format\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visitors/scan",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "scan"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Invalid QR code rejected', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([400, 422]);",
                  "});",
                  "",
                  "if (pm.response.code >= 400) {",
                  "    console.log('Invalid QR code properly rejected:', pm.response.json().error.message);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "3. Get Final Visit Status Check",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{residentToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/visitors/invitations/{{singleVisitId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "invitations", "{{singleVisitId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    console.log('\\n=== FINAL VISIT STATUS ===');",
                  "    console.log('Visit Title:', data.visit.title);",
                  "    console.log('Status:', data.visit.status);",
                  "    console.log('Expected Start:', data.visit.expected_start);",
                  "    console.log('Expected End:', data.visit.expected_end);",
                  "    if (data.visit.actual_start) {",
                  "        console.log('Actual Start:', data.visit.actual_start);",
                  "    }",
                  "    if (data.visit.actual_end) {",
                  "        console.log('Actual End:', data.visit.actual_end);",
                  "    }",
                  "    console.log('==========================');",
                  "} else {",
                  "    console.log('Failed to get final status');",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set default base URL if not set",
          "if (!pm.environment.get('baseUrl')) {",
          "    pm.environment.set('baseUrl', 'http://localhost:4500');",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script for all requests",
          "pm.test('Response time is acceptable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test('Response has proper structure', function () {",
          "    if (pm.response.code >= 200 && pm.response.code < 300) {",
          "        const jsonData = pm.response.json();",
          "        pm.expect(jsonData).to.have.property('success');",
          "        pm.expect(jsonData).to.have.property('timestamp');",
          "    }",
          "});"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:4500"
    },
    {
      "key": "residentToken",
      "value": ""
    },
    {
      "key": "residentRefreshToken",
      "value": ""
    },
    {
      "key": "residentId",
      "value": ""
    },
    {
      "key": "residentBuildingId",
      "value": ""
    },
    {
      "key": "residentEmail",
      "value": ""
    },
    {
      "key": "residentName",
      "value": ""
    },
    {
      "key": "apartmentNumber",
      "value": ""
    },
    {
      "key": "securityToken",
      "value": ""
    },
    {
      "key": "securityId",
      "value": ""
    },
    {
      "key": "singleVisitId",
      "value": ""
    },
    {
      "key": "singleVisitQRCode",
      "value": ""
    },
    {
      "key": "singleVisitQRImage",
      "value": ""
    },
    {
      "key": "groupVisitId",
      "value": ""
    },
    {
      "key": "groupVisitQRCode",
      "value": ""
    },
    {
      "key": "groupVisitQRImage",
      "value": ""
    },
    {
      "key": "deliveryVisitId",
      "value": ""
    },
    {
      "key": "deliveryVisitQRCode",
      "value": ""
    }
  ]
}