{
  "info": {
    "_postman_id": "safeguard-complete-2024-v3",
    "name": "SafeGuard Complete API Testing",
    "description": "Comprehensive testing collection for SafeGuard visitor management system with resident approval workflow.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "safeguard-api-v2024"
  },
  "item": [
    {
      "name": "🚀 Initial Setup",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            }
          }
        },
        {
          "name": "Initial System Setup",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Dantata Building Complex\",\n  \"address\": \"123 Victoria Island, Lagos\",\n  \"city\": \"Lagos\",\n  \"state\": \"Lagos State\",\n  \"building_email\": \"dantata@dantatagroup.com\",\n  \"total_licenses\": 250,\n  \"adminEmail\": \"admin@dantatagroup.com\",\n  \"adminPassword\": \"AdminPass123!\",\n  \"adminFirstName\": \"Building\",\n  \"adminLastName\": \"Admin\",\n  \"adminPhone\": \"+2348012345600\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/initial-setup",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "initial-setup"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const data = pm.response.json().data;",
                  "    pm.environment.set('buildingId', data.building.id);",
                  "    pm.environment.set('buildingEmail', data.building.email);",
                  "    console.log('✅ Initial setup completed');",
                  "    console.log('Building ID:', data.building.id);",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "🔐 Authentication",
      "item": [
        {
          "name": "Super Admin Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"superadmin@safeguard.com\",\n  \"password\": \"SuperSecure123!\",\n  \"device_name\": \"Postman Test Client\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/enhanced/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "enhanced", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    pm.environment.set('superAdminToken', data.accessToken);",
                  "    console.log('✅ Super admin login successful');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Building Admin Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@dantatagroup.com\",\n  \"password\": \"AdminPass123!\",\n  \"device_name\": \"Building Admin Client\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/enhanced/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "enhanced", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    pm.environment.set('buildingAdminToken', data.accessToken);",
                  "    pm.environment.set('buildingId', data.user.building_id);",
                  "    console.log('✅ Building admin login successful');",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "👥 Resident Registration",
      "item": [
        {
          "name": "Register Resident 1 (John Doe)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"building_email\": \"dantata@dantatagroup.com\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"ResidentPass123!\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"phone\": \"+2348012345700\",\n  \"apartment_number\": \"A101\",\n  \"emergency_contact_name\": \"Jane Doe\",\n  \"emergency_contact_phone\": \"+2348012345701\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/registration/self-register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "registration", "self-register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const data = pm.response.json().data;",
                  "    pm.environment.set('resident1Id', data.user.id);",
                  "    pm.environment.set('resident1Email', data.user.email);",
                  "    console.log('✅ John Doe registered (pending approval)');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Register Resident 2 (Alice Smith)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"building_email\": \"dantata@dantatagroup.com\",\n  \"email\": \"alice.smith@example.com\",\n  \"password\": \"ResidentPass123!\",\n  \"first_name\": \"Alice\",\n  \"last_name\": \"Smith\",\n  \"phone\": \"+2348012345710\",\n  \"apartment_number\": \"B205\",\n  \"emergency_contact_name\": \"Bob Smith\",\n  \"emergency_contact_phone\": \"+2348012345711\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/registration/self-register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "registration", "self-register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const data = pm.response.json().data;",
                  "    pm.environment.set('resident2Id', data.user.id);",
                  "    pm.environment.set('resident2Email', data.user.email);",
                  "    console.log('✅ Alice Smith registered (pending approval)');",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "✅ Resident Approval Workflow",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{buildingAdminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/resident-approval/health",
              "host": ["{{baseUrl}}"],
              "path": ["api", "resident-approval", "health"]
            }
          }
        },
        {
          "name": "1. Get Pending Approvals",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{buildingAdminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/resident-approval/pending/{{buildingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "resident-approval", "pending", "{{buildingId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    console.log('📋 Found', data.total, 'pending approvals');",
                  "    ",
                  "    if (data.approvals && data.approvals.length > 0) {",
                  "        pm.environment.set('approval1Id', data.approvals[0].id);",
                  "        console.log('First approval ID:', data.approvals[0].id);",
                  "        ",
                  "        if (data.approvals.length > 1) {",
                  "            pm.environment.set('approval2Id', data.approvals[1].id);",
                  "            console.log('Second approval ID:', data.approvals[1].id);",
                  "        }",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "2. Approve John Doe",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{buildingAdminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"approved\": true,\n  \"reason\": \"Application meets all requirements\",\n  \"notes\": \"Welcome to Dantata Building Complex!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/resident-approval/{{approval1Id}}/process",
              "host": ["{{baseUrl}}"],
              "path": ["api", "resident-approval", "{{approval1Id}}", "process"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    console.log('✅ John Doe approved successfully');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "3. Reject Alice Smith",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{buildingAdminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"approved\": false,\n  \"reason\": \"Incomplete documentation\",\n  \"notes\": \"Please resubmit with valid ID and proof of employment.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/resident-approval/{{approval2Id}}/process",
              "host": ["{{baseUrl}}"],
              "path": ["api", "resident-approval", "{{approval2Id}}", "process"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    console.log('❌ Alice Smith rejected');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "4. Get Dashboard",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{buildingAdminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/resident-approval/dashboard/{{buildingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "resident-approval", "dashboard", "{{buildingId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "🔒 Access Control Tests",
      "item": [
        {
          "name": "Building Admin - Access Other Building (Should Fail)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{buildingAdminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/resident-approval/pending/00000000-0000-0000-0000-000000000000",
              "host": ["{{baseUrl}}"],
              "path": ["api", "resident-approval", "pending", "00000000-0000-0000-0000-000000000000"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Should return 403', function () {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "No Token - Should Fail",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/resident-approval/pending/{{buildingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "resident-approval", "pending", "{{buildingId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Should return 401', function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "🎯 End-to-End Verification",
      "item": [
        {
          "name": "Approved Resident Login (John)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{resident1Email}}\",\n  \"password\": \"ResidentPass123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/enhanced/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "enhanced", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    console.log('✅ Approved resident can login');",
                  "    pm.environment.set('residentToken', pm.response.json().data.accessToken);",
                  "} else {",
                  "    console.log('❌ Login failed - may not be approved yet');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Rejected Resident Login (Alice) - Should Fail",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{resident2Email}}\",\n  \"password\": \"ResidentPass123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/enhanced/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "enhanced", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Rejected resident cannot login', function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "console.log('✅ Rejected resident correctly blocked from login');"
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "if (!pm.environment.get('baseUrl')) {",
          "    pm.environment.set('baseUrl', 'http://localhost:4500');",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:4500"
    }
  ]
}