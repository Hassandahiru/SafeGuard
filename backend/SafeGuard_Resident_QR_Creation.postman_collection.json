{
  "info": {
    "name": "SafeGuard Resident QR Creation",
    "description": "Focused testing for residents creating visitor invitations and generating QR codes",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "1. Resident Authentication",
      "item": [
        {
          "name": "Resident Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"resident.test@example.com\",\n  \"password\": \"ResidentPass123!\",\n  \"remember_me\": false,\n  \"device_name\": \"Resident Mobile App\",\n  \"location\": \"Apartment B205\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/enhanced/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "enhanced", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    pm.environment.set('residentToken', data.accessToken);",
                  "    pm.environment.set('residentId', data.user.id);",
                  "    pm.environment.set('buildingId', data.user.building_id);",
                  "    pm.environment.set('residentEmail', data.user.email);",
                  "    pm.environment.set('residentName', data.user.first_name + ' ' + data.user.last_name);",
                  "    pm.environment.set('apartmentNumber', data.user.apartment_number);",
                  "    ",
                  "    console.log('‚úÖ RESIDENT LOGIN SUCCESSFUL');",
                  "    console.log('üë§ Name:', data.user.first_name + ' ' + data.user.last_name);",
                  "    console.log('üè† Apartment:', data.user.apartment_number);",
                  "    console.log('üè¢ Building ID:', data.user.building_id);",
                  "    console.log('üîê Token captured for API calls');",
                  "    ",
                  "    pm.test('Resident authenticated successfully', function () {",
                  "        pm.expect(data.user.role).to.eql('resident');",
                  "        pm.expect(data.user.is_active).to.eql(true);",
                  "        pm.expect(data.accessToken).to.not.be.empty;",
                  "    });",
                  "} else {",
                  "    console.log('‚ùå RESIDENT LOGIN FAILED');",
                  "    console.log('Response:', pm.response.json());",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "2. Create Visitor Invitations & Generate QR Codes",
      "item": [
        {
          "name": "Create Business Meeting Visit + QR",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{residentToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Business Meeting - Financial Consultation\",\n  \"description\": \"Quarterly financial review and investment planning session\",\n  \"expected_start\": \"2024-01-25T14:00:00Z\",\n  \"expected_end\": \"2024-01-25T16:30:00Z\",\n  \"visit_type\": \"single\",\n  \"visitors\": [\n    {\n      \"name\": \"John Smith\",\n      \"phone\": \"+2348123456789\",\n      \"email\": \"john.smith@elitefinancial.com\",\n      \"company\": \"Elite Financial Advisors\",\n      \"identification_type\": \"National ID\",\n      \"identification_number\": \"A12345678\",\n      \"purpose\": \"Financial consultation\"\n    }\n  ],\n  \"notes\": \"Professional visitor - financial advisor. Will arrive in company vehicle.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visitors/invitations",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "invitations"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const data = pm.response.json().data;",
                  "    pm.environment.set('businessVisitId', data.visit.id);",
                  "    pm.environment.set('businessQRCode', data.qr_code);",
                  "    pm.environment.set('businessQRImage', data.qr_image);",
                  "    ",
                  "    console.log('\\nüé´ BUSINESS VISIT CREATED WITH QR CODE');",
                  "    console.log('üìã Visit Title:', data.visit.title);",
                  "    console.log('üÜî Visit ID:', data.visit.id);",
                  "    console.log('üì± QR Code:', data.qr_code);",
                  "    console.log('üë• Visitor Count:', data.visitor_count);",
                  "    console.log('‚è∞ Expires:', data.expires_at);",
                  "    console.log('üñºÔ∏è  QR Image Available:', data.qr_image ? 'Yes' : 'No');",
                  "    ",
                  "    pm.test('Business visit created with QR code', function () {",
                  "        pm.expect(data.visit.title).to.include('Business Meeting');",
                  "        pm.expect(data.qr_code).to.match(/^SG_[A-Z0-9]{32}$/);",
                  "        pm.expect(data.visitor_count).to.eql(1);",
                  "        pm.expect(data.qr_image).to.not.be.empty;",
                  "        pm.expect(data.expires_at).to.not.be.empty;",
                  "    });",
                  "} else {",
                  "    console.log('‚ùå FAILED TO CREATE BUSINESS VISIT');",
                  "    console.log('Error:', pm.response.json());",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Family Party Group Visit + QR",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{residentToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Family Birthday Celebration\",\n  \"description\": \"Celebrating my son's 16th birthday with extended family\",\n  \"expected_start\": \"2024-01-27T16:00:00Z\",\n  \"expected_end\": \"2024-01-27T22:00:00Z\",\n  \"visit_type\": \"group\",\n  \"visitors\": [\n    {\n      \"name\": \"Sarah Johnson\",\n      \"phone\": \"+2348123456701\",\n      \"email\": \"sarah.j@email.com\",\n      \"relationship\": \"Sister\",\n      \"purpose\": \"Birthday celebration\"\n    },\n    {\n      \"name\": \"Michael Johnson\",\n      \"phone\": \"+2348123456702\",\n      \"email\": \"mike.j@email.com\",\n      \"relationship\": \"Brother-in-law\",\n      \"purpose\": \"Birthday celebration\"\n    },\n    {\n      \"name\": \"Emma Wilson\",\n      \"phone\": \"+2348123456703\",\n      \"email\": \"emma.w@email.com\",\n      \"relationship\": \"Family friend\",\n      \"purpose\": \"Birthday celebration\"\n    },\n    {\n      \"name\": \"David Wilson\",\n      \"phone\": \"+2348123456704\",\n      \"email\": \"david.w@email.com\",\n      \"relationship\": \"Family friend\",\n      \"purpose\": \"Birthday celebration\"\n    },\n    {\n      \"name\": \"Grace Thompson\",\n      \"phone\": \"+2348123456705\",\n      \"email\": \"grace.t@email.com\",\n      \"relationship\": \"Grandmother\",\n      \"purpose\": \"Birthday celebration\"\n    }\n  ],\n  \"notes\": \"Large family gathering for birthday party. Guests will arrive between 4-5 PM. Party supplies delivered earlier.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visitors/invitations",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "invitations"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const data = pm.response.json().data;",
                  "    pm.environment.set('partyVisitId', data.visit.id);",
                  "    pm.environment.set('partyQRCode', data.qr_code);",
                  "    pm.environment.set('partyQRImage', data.qr_image);",
                  "    ",
                  "    console.log('\\nüéâ FAMILY PARTY CREATED WITH GROUP QR CODE');",
                  "    console.log('üìã Visit Title:', data.visit.title);",
                  "    console.log('üÜî Visit ID:', data.visit.id);",
                  "    console.log('üì± QR Code:', data.qr_code);",
                  "    console.log('üë• Visitor Count:', data.visitor_count, 'people');",
                  "    console.log('üéÇ Visit Type:', data.visit.visit_type);",
                  "    console.log('‚è∞ Party Duration:', data.visit.expected_start, 'to', data.visit.expected_end);",
                  "    ",
                  "    pm.test('Family party created with group QR code', function () {",
                  "        pm.expect(data.visit.title).to.include('Birthday');",
                  "        pm.expect(data.qr_code).to.match(/^SG_[A-Z0-9]{32}$/);",
                  "        pm.expect(data.visitor_count).to.eql(5);",
                  "        pm.expect(data.visit.visit_type).to.eql('group');",
                  "    });",
                  "} else {",
                  "    console.log('‚ùå FAILED TO CREATE FAMILY PARTY');",
                  "    console.log('Error:', pm.response.json());",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Service Provider Visit + QR",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{residentToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Home Maintenance - Plumbing Service\",\n  \"description\": \"Emergency plumbing repair for kitchen sink leak\",\n  \"expected_start\": \"2024-01-24T09:00:00Z\",\n  \"expected_end\": \"2024-01-24T12:00:00Z\",\n  \"visit_type\": \"service\",\n  \"visitors\": [\n    {\n      \"name\": \"Ahmed Hassan\",\n      \"phone\": \"+2348123456800\",\n      \"email\": \"ahmed@quickplumbing.ng\",\n      \"company\": \"Quick Plumbing Services\",\n      \"identification_type\": \"Professional License\",\n      \"identification_number\": \"PLB-2024-001\",\n      \"purpose\": \"Plumbing repair\",\n      \"service_type\": \"maintenance\"\n    }\n  ],\n  \"notes\": \"Professional plumber for emergency repair. Will arrive with work tools and company van.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visitors/invitations",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "invitations"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const data = pm.response.json().data;",
                  "    pm.environment.set('serviceVisitId', data.visit.id);",
                  "    pm.environment.set('serviceQRCode', data.qr_code);",
                  "    pm.environment.set('serviceQRImage', data.qr_image);",
                  "    ",
                  "    console.log('\\nüîß SERVICE VISIT CREATED WITH QR CODE');",
                  "    console.log('üìã Service Type:', data.visit.title);",
                  "    console.log('üÜî Visit ID:', data.visit.id);",
                  "    console.log('üì± QR Code:', data.qr_code);",
                  "    console.log('üë∑ Service Provider:', 'Ahmed Hassan - Quick Plumbing');",
                  "    console.log('üïò Service Window:', '3 hours');",
                  "    ",
                  "    pm.test('Service visit created with QR code', function () {",
                  "        pm.expect(data.visit.title).to.include('Plumbing');",
                  "        pm.expect(data.qr_code).to.match(/^SG_[A-Z0-9]{32}$/);",
                  "        pm.expect(data.visitor_count).to.eql(1);",
                  "    });",
                  "} else {",
                  "    console.log('‚ùå FAILED TO CREATE SERVICE VISIT');",
                  "    console.log('Error:', pm.response.json());",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Package Delivery Visit + QR",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{residentToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Package Delivery - Jumia Online Order\",\n  \"description\": \"Expecting electronics delivery from Jumia Nigeria\",\n  \"expected_start\": \"2024-01-23T08:00:00Z\",\n  \"expected_end\": \"2024-01-23T18:00:00Z\",\n  \"visit_type\": \"delivery\",\n  \"visitors\": [\n    {\n      \"name\": \"Jumia Delivery Agent\",\n      \"phone\": \"+2348000123456\",\n      \"company\": \"Jumia Nigeria\",\n      \"purpose\": \"Package delivery\",\n      \"identification_type\": \"Company ID\",\n      \"delivery_info\": {\n        \"package_id\": \"JM-2024-789456\",\n        \"item_description\": \"Electronics - Smartphone\",\n        \"delivery_company\": \"Jumia Express\"\n      }\n    }\n  ],\n  \"notes\": \"Package for {{residentName}}, {{apartmentNumber}}. If not available, leave with security (authorized).\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visitors/invitations",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "invitations"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const data = pm.response.json().data;",
                  "    pm.environment.set('deliveryVisitId', data.visit.id);",
                  "    pm.environment.set('deliveryQRCode', data.qr_code);",
                  "    pm.environment.set('deliveryQRImage', data.qr_image);",
                  "    ",
                  "    console.log('\\nüì¶ DELIVERY VISIT CREATED WITH QR CODE');",
                  "    console.log('üìã Delivery Type:', data.visit.title);",
                  "    console.log('üÜî Visit ID:', data.visit.id);",
                  "    console.log('üì± QR Code:', data.qr_code);",
                  "    console.log('üöö Delivery Company:', 'Jumia Nigeria');",
                  "    console.log('üìÖ Delivery Window:', '10 hours (8 AM - 6 PM)');",
                  "    ",
                  "    pm.test('Delivery visit created with QR code', function () {",
                  "        pm.expect(data.visit.title).to.include('Delivery');",
                  "        pm.expect(data.qr_code).to.match(/^SG_[A-Z0-9]{32}$/);",
                  "        pm.expect(data.visit.visit_type).to.eql('delivery');",
                  "    });",
                  "} else {",
                  "    console.log('‚ùå FAILED TO CREATE DELIVERY VISIT');",
                  "    console.log('Error:', pm.response.json());",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "3. QR Code Verification & Visit Management",
      "item": [
        {
          "name": "Get All My Visits with QR Codes",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{residentToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/visitors/invitations?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "invitations"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    ",
                  "    console.log('\\nüìã ALL MY VISITOR INVITATIONS');",
                  "    console.log('üìä Total Invitations:', data.pagination.total);",
                  "    console.log('üìÑ Page:', data.pagination.page, 'of', data.pagination.totalPages);",
                  "    ",
                  "    if (data.data && data.data.length > 0) {",
                  "        console.log('\\nüìù VISIT DETAILS:');",
                  "        data.data.forEach((visit, index) => {",
                  "            console.log(`${index + 1}. ${visit.title}`);",
                  "            console.log(`   üìÖ Expected: ${visit.expected_start}`);",
                  "            console.log(`   üìä Status: ${visit.status}`);",
                  "            console.log(`   üë• Visitors: ${visit.visitor_count || 'N/A'}`);",
                  "            if (visit.qr_code) {",
                  "                console.log(`   üì± QR Code: ${visit.qr_code.substring(0, 20)}...`);",
                  "            }",
                  "            console.log('');",
                  "        });",
                  "    }",
                  "    ",
                  "    pm.test('Successfully retrieved visits', function () {",
                  "        pm.expect(data).to.have.property('data');",
                  "        pm.expect(data).to.have.property('pagination');",
                  "        pm.expect(data.pagination.total).to.be.at.least(4);",
                  "    });",
                  "} else {",
                  "    console.log('‚ùå FAILED TO GET VISITS');",
                  "    console.log('Error:', pm.response.json());",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Business Visit Details + QR Code",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{residentToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/visitors/invitations/{{businessVisitId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "invitations", "{{businessVisitId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    ",
                  "    console.log('\\nüíº BUSINESS VISIT DETAILS');",
                  "    console.log('üìã Title:', data.visit.title);",
                  "    console.log('üÜî Visit ID:', data.visit.id);",
                  "    console.log('üìä Status:', data.visit.status);",
                  "    console.log('üìÖ Expected Start:', data.visit.expected_start);",
                  "    console.log('üìÖ Expected End:', data.visit.expected_end);",
                  "    ",
                  "    if (data.qr_code) {",
                  "        console.log('\\nüì± QR CODE INFORMATION');",
                  "        console.log('üîê QR Code:', data.qr_code.code);",
                  "        console.log('‚è∞ Expires At:', data.qr_code.expiresAt);",
                  "        console.log('üñºÔ∏è  Image Available:', data.qr_code.imageUrl ? 'Yes' : 'No');",
                  "        ",
                  "        // Store QR details for sharing",
                  "        pm.environment.set('shareableQRCode', data.qr_code.code);",
                  "        pm.environment.set('qrImageUrl', data.qr_code.imageUrl);",
                  "    }",
                  "    ",
                  "    if (data.visit.visitors && data.visit.visitors.length > 0) {",
                  "        console.log('\\nüë• VISITOR INFORMATION');",
                  "        data.visit.visitors.forEach((visitor, index) => {",
                  "            console.log(`${index + 1}. ${visitor.name}`);",
                  "            console.log(`   üìû Phone: ${visitor.phone}`);",
                  "            console.log(`   üè¢ Company: ${visitor.company || 'N/A'}`);",
                  "            console.log(`   üéØ Purpose: ${visitor.purpose}`);",
                  "        });",
                  "    }",
                  "    ",
                  "    pm.test('Business visit details retrieved with QR code', function () {",
                  "        pm.expect(data.visit.title).to.include('Business Meeting');",
                  "        pm.expect(data.qr_code).to.not.be.undefined;",
                  "        pm.expect(data.qr_code.code).to.match(/^SG_[A-Z0-9]{32}$/);",
                  "    });",
                  "} else {",
                  "    console.log('‚ùå FAILED TO GET BUSINESS VISIT DETAILS');",
                  "    console.log('Error:', pm.response.json());",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Family Party Details + Group QR Code",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{residentToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/visitors/invitations/{{partyVisitId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "invitations", "{{partyVisitId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json().data;",
                  "    ",
                  "    console.log('\\nüéâ FAMILY PARTY DETAILS');",
                  "    console.log('üìã Title:', data.visit.title);",
                  "    console.log('üÜî Visit ID:', data.visit.id);",
                  "    console.log('üéÇ Visit Type:', data.visit.visit_type);",
                  "    console.log('üë• Total Guests:', data.visit.visitors ? data.visit.visitors.length : 'Unknown');",
                  "    ",
                  "    if (data.qr_code) {",
                  "        console.log('\\nüì± GROUP QR CODE');",
                  "        console.log('üîê QR Code:', data.qr_code.code);",
                  "        console.log('üë• Covers All Guests:', 'Yes (Group Code)');",
                  "        console.log('‚è∞ Valid Until:', data.qr_code.expiresAt);",
                  "    }",
                  "    ",
                  "    if (data.visit.visitors && data.visit.visitors.length > 0) {",
                  "        console.log('\\nüë®‚Äçüë©‚Äçüëß‚Äçüë¶ PARTY GUESTS');",
                  "        data.visit.visitors.forEach((guest, index) => {",
                  "            console.log(`${index + 1}. ${guest.name} (${guest.relationship || guest.purpose})`);",
                  "        });",
                  "    }",
                  "    ",
                  "    pm.test('Family party details retrieved with group QR code', function () {",
                  "        pm.expect(data.visit.visit_type).to.eql('group');",
                  "        pm.expect(data.visit.visitors.length).to.be.at.least(5);",
                  "        pm.expect(data.qr_code.code).to.match(/^SG_[A-Z0-9]{32}$/);",
                  "    });",
                  "} else {",
                  "    console.log('‚ùå FAILED TO GET PARTY DETAILS');",
                  "    console.log('Error:', pm.response.json());",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "4. QR Code Sharing Simulation",
      "item": [
        {
          "name": "Generate QR Code Summary for Sharing",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Simulate QR code sharing process",
                  "console.log('\\nüì± QR CODE SHARING SIMULATION');",
                  "console.log('=' .repeat(50));",
                  "",
                  "// Business Meeting QR",
                  "const businessQR = pm.environment.get('businessQRCode');",
                  "if (businessQR) {",
                  "    console.log('üíº BUSINESS MEETING QR CODE');",
                  "    console.log('üë§ Send to: John Smith (john.smith@elitefinancial.com)');",
                  "    console.log('üì± QR Code: ' + businessQR);",
                  "    console.log('üìß Via: Email with meeting details');",
                  "    console.log('');",
                  "}",
                  "",
                  "// Family Party QR",
                  "const partyQR = pm.environment.get('partyQRCode');",
                  "if (partyQR) {",
                  "    console.log('üéâ FAMILY PARTY GROUP QR CODE');",
                  "    console.log('üë• Send to: All 5 family members');",
                  "    console.log('üì± QR Code: ' + partyQR);",
                  "    console.log('üìß Via: WhatsApp family group');",
                  "    console.log('');",
                  "}",
                  "",
                  "// Service QR",
                  "const serviceQR = pm.environment.get('serviceQRCode');",
                  "if (serviceQR) {",
                  "    console.log('üîß SERVICE PROVIDER QR CODE');",
                  "    console.log('üë§ Send to: Ahmed Hassan (Plumber)');",
                  "    console.log('üì± QR Code: ' + serviceQR);",
                  "    console.log('üìß Via: SMS to service provider');",
                  "    console.log('');",
                  "}",
                  "",
                  "// Delivery QR",
                  "const deliveryQR = pm.environment.get('deliveryQRCode');",
                  "if (deliveryQR) {",
                  "    console.log('üì¶ DELIVERY QR CODE');",
                  "    console.log('üè¢ Company: Jumia Nigeria');",
                  "    console.log('üì± QR Code: ' + deliveryQR);",
                  "    console.log('üìß Via: Delivery tracking system');",
                  "    console.log('');",
                  "}",
                  "",
                  "console.log('‚úÖ All QR codes ready for sharing with visitors!');",
                  "console.log('üîê Visitors will show these QR codes to security guards');",
                  "console.log('üëÆ Security will scan QR codes for entry/exit tracking');",
                  "",
                  "// Skip the actual request since this is just a simulation",
                  "pm.request.url = '';"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "",
              "host": [""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('QR codes ready for sharing', function () {",
                  "    const businessQR = pm.environment.get('businessQRCode');",
                  "    const partyQR = pm.environment.get('partyQRCode');",
                  "    const serviceQR = pm.environment.get('serviceQRCode');",
                  "    const deliveryQR = pm.environment.get('deliveryQRCode');",
                  "    ",
                  "    pm.expect(businessQR).to.not.be.empty;",
                  "    pm.expect(partyQR).to.not.be.empty;",
                  "    pm.expect(serviceQR).to.not.be.empty;",
                  "    pm.expect(deliveryQR).to.not.be.empty;",
                  "    ",
                  "    console.log('\\nüìä QR CODE GENERATION SUMMARY');",
                  "    console.log('‚úÖ Business Meeting QR: Generated');",
                  "    console.log('‚úÖ Family Party QR: Generated');",
                  "    console.log('‚úÖ Service Provider QR: Generated');",
                  "    console.log('‚úÖ Package Delivery QR: Generated');",
                  "    console.log('');",
                  "    console.log('üéØ NEXT STEPS:');",
                  "    console.log('1. Resident shares QR codes with expected visitors');",
                  "    console.log('2. Visitors arrive at building gate with QR codes');",
                  "    console.log('3. Security guards scan QR codes using security terminal');",
                  "    console.log('4. System tracks visitor entry/exit automatically');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set default base URL if not set",
          "if (!pm.environment.get('baseUrl')) {",
          "    pm.environment.set('baseUrl', 'http://localhost:4500');",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test validation",
          "pm.test('Response time is acceptable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "if (pm.response.code >= 200 && pm.response.code < 300) {",
          "    pm.test('Response has proper structure', function () {",
          "        const jsonData = pm.response.json();",
          "        pm.expect(jsonData).to.have.property('success');",
          "        pm.expect(jsonData).to.have.property('timestamp');",
          "    });",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:4500"
    },
    {
      "key": "residentToken",
      "value": ""
    },
    {
      "key": "residentId",
      "value": ""
    },
    {
      "key": "buildingId",
      "value": ""
    },
    {
      "key": "residentEmail",
      "value": ""
    },
    {
      "key": "residentName",
      "value": ""
    },
    {
      "key": "apartmentNumber",
      "value": ""
    },
    {
      "key": "businessVisitId",
      "value": ""
    },
    {
      "key": "businessQRCode",
      "value": ""
    },
    {
      "key": "businessQRImage",
      "value": ""
    },
    {
      "key": "partyVisitId",
      "value": ""
    },
    {
      "key": "partyQRCode",
      "value": ""
    },
    {
      "key": "partyQRImage",
      "value": ""
    },
    {
      "key": "serviceVisitId",
      "value": ""
    },
    {
      "key": "serviceQRCode",
      "value": ""
    },
    {
      "key": "serviceQRImage",
      "value": ""
    },
    {
      "key": "deliveryVisitId",
      "value": ""
    },
    {
      "key": "deliveryQRCode",
      "value": ""
    },
    {
      "key": "deliveryQRImage",
      "value": ""
    },
    {
      "key": "shareableQRCode",
      "value": ""
    },
    {
      "key": "qrImageUrl",
      "value": ""
    }
  ]
}